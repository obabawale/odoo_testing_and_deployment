# Experimenting ssh connection again

version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.8

jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: 'v2.25.0'
          command: |
            curl -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            mkdir -p ~/.docker/cli-plugins
            chmod +x ~/docker-compose
            mv ~/docker-compose ~/.docker/cli-plugins/docker-compose
      - run:
          name: Install netcat
          command: sudo apt-get update && sudo apt-get install -y netcat
      - run:
          name: Build Docker Image
          command: docker build -t my-odoo-image .
      - run:
          name: Run Docker Compose
          command: docker compose -f docker-compose.yml up -d
      - run:
          name: Run Odoo tests
          command: |
            docker-compose run --rm web odoo --db-filter=^mydb$ -d mydb --test-enable --stop-after-init --init=all
      - run:
          name: Stop Docker Compose
          command: docker compose down

  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Fix ssh Could not resolve hostname
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts # Add live server IP to known hosts.
      - add_ssh_keys:
          fingerprints:
            - "SHA256:peGvvo+9u/kYNEarxxdtVDIN/82cRu2sNHFkjiOiiD0"
      - run:
          name: Build Docker Image
          command: docker build -t my-odoo-image .
      - run:
          name: Push Docker Image
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker tag my-odoo-image $DOCKER_USERNAME/my-odoo-image:latest
            docker push $DOCKER_USERNAME/my-odoo-image:latest
      - run:
          name: Deploy to Production
          command: |
            ssh $SSH_USER@$SSH_HOST 'cd odoo_testing_and_deployment && git submodule update --remote --merge && git pull --recurse-submodules'
            # ssh $SSH_USER@$SSH_HOST 'cd odoo_testing_and_deployment && echo $DOCKER_USERNAME && ls -al' find a way to pass $DOCKER_USERNAME as an environment variable
            ssh $SSH_USER@$SSH_HOST 'cd odoo_testing_and_deployment && docker pull lekanbabawale/my-odoo-image:latest && docker compose -f docker-compose.yml up -d'
            

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main
